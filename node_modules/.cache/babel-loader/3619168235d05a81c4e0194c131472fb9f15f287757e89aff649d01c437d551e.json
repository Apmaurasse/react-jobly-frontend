{"ast":null,"code":"var _jsxFileName = \"/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/RootLayout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootLayout = () => {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  useEffect(() => {\n    // Function to handle changes in localStorage\n    const handleStorageChange = () => {\n      const currentUserJSON = localStorage.getItem('currentUser');\n      if (currentUserJSON) {\n        const currentUser = JSON.parse(currentUserJSON);\n        setFirstName(currentUser.first_name);\n        setLastName(currentUser.last_name);\n      } else {\n        setFirstName(\"\");\n        setLastName(\"\");\n      }\n    };\n\n    // Initial retrieval of user data\n    handleStorageChange();\n\n    // Listen for changes in localStorage\n    window.addEventListener('storage', handleStorageChange);\n\n    // Clean up listener on component unmount\n    return () => {\n      window.removeEventListener('storage', handleStorageChange);\n    };\n  }, []); // Empty dependency array since we only want to run this effect once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        firstName: firstName,\n        lastName: lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(RootLayout, \"vqUYQ07cCk7WHirKWrj4Z9WsfD0=\");\n_c = RootLayout;\nexport default RootLayout;\nvar _c;\n$RefreshReg$(_c, \"RootLayout\");","map":{"version":3,"names":["React","useState","useEffect","Outlet","NavBar","jsxDEV","_jsxDEV","RootLayout","_s","firstName","setFirstName","lastName","setLastName","handleStorageChange","currentUserJSON","localStorage","getItem","currentUser","JSON","parse","first_name","last_name","window","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/RootLayout.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Outlet } from 'react-router-dom';\nimport NavBar from './NavBar';\n\nconst RootLayout = () => {\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n\n    useEffect(() => {\n        // Function to handle changes in localStorage\n        const handleStorageChange = () => {\n            const currentUserJSON = localStorage.getItem('currentUser');\n            if (currentUserJSON) {\n                const currentUser = JSON.parse(currentUserJSON);\n                setFirstName(currentUser.first_name);\n                setLastName(currentUser.last_name);\n            } else {\n                setFirstName(\"\");\n                setLastName(\"\");\n            }\n        };\n\n        // Initial retrieval of user data\n        handleStorageChange();\n\n        // Listen for changes in localStorage\n        window.addEventListener('storage', handleStorageChange);\n\n        // Clean up listener on component unmount\n        return () => {\n            window.removeEventListener('storage', handleStorageChange);\n        };\n    }, []); // Empty dependency array since we only want to run this effect once\n\n    return (\n        <div>\n            <header>\n                <NavBar firstName={firstName} lastName={lastName} />\n            </header>\n            <main>\n                <Outlet />\n            </main>\n        </div>\n    );\n};\n\nexport default RootLayout;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,kBAAkB;AACzC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMW,mBAAmB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,eAAe,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MAC3D,IAAIF,eAAe,EAAE;QACjB,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,eAAe,CAAC;QAC/CJ,YAAY,CAACO,WAAW,CAACG,UAAU,CAAC;QACpCR,WAAW,CAACK,WAAW,CAACI,SAAS,CAAC;MACtC,CAAC,MAAM;QACHX,YAAY,CAAC,EAAE,CAAC;QAChBE,WAAW,CAAC,EAAE,CAAC;MACnB;IACJ,CAAC;;IAED;IACAC,mBAAmB,CAAC,CAAC;;IAErB;IACAS,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEV,mBAAmB,CAAC;;IAEvD;IACA,OAAO,MAAM;MACTS,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEX,mBAAmB,CAAC;IAC9D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACIP,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,eACInB,OAAA,CAACF,MAAM;QAACK,SAAS,EAAEA,SAAU;QAACE,QAAQ,EAAEA;MAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACTvB,OAAA;MAAAmB,QAAA,eACInB,OAAA,CAACH,MAAM;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACrB,EAAA,CAxCID,UAAU;AAAAuB,EAAA,GAAVvB,UAAU;AA0ChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}