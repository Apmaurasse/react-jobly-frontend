{"ast":null,"code":"var _jsxFileName = \"/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/Logout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = ({\n  logoutKey\n}) => {\n  _s();\n  const initialState = {\n    response: \"\",\n    error: \"\"\n  };\n  const [confirmLogout, setConfirmLogout] = useState(initialState);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setConfirmLogout(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      localStorage.removeItem('currentUser');\n      navigate('/logoutconfirmation'); // Redirect after successful logout\n      logoutKey(); // Update the key in the parent component\n    } catch (error) {\n      if (error) {\n        setConfirmLogout(prevData => ({\n          ...prevData,\n          error: \"Error logging out\"\n        }));\n      } else {\n        setConfirmLogout(prevData => ({\n          ...prevData,\n          error: error.message\n        }));\n      }\n      setConfirmLogout(prevData => ({\n        ...prevData,\n        response: \"\"\n      }));\n    }\n    ;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Response\",\n            children: \"How was it?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"response\",\n            type: \"text\",\n            name: \"response\",\n            value: confirmLogout.response,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Logout, \"P90p5vSYyDDYj1e9gp5kngrLkUA=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Logout","logoutKey","_s","initialState","response","error","confirmLogout","setConfirmLogout","navigate","handleChange","e","name","value","target","prevData","handleSubmit","event","preventDefault","localStorage","removeItem","message","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","_c","$RefreshReg$"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/Logout.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Logout = ({ logoutKey }) => {\n    const initialState = {\n        response: \"\",\n        error: \"\"\n    };\n\n    const [confirmLogout, setConfirmLogout] = useState(initialState);\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setConfirmLogout((prevData) => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try{        \n        localStorage.removeItem('currentUser');\n        navigate('/logoutconfirmation'); // Redirect after successful logout\n        logoutKey(); // Update the key in the parent component\n        } catch (error) { if(error){\n            setConfirmLogout((prevData) => ({\n                ...prevData,\n                error: \"Error logging out\"}))\n        } else {\n        setConfirmLogout((prevData) => ({\n            ...prevData,\n            error: error.message\n        }));\n    }\n        setConfirmLogout((prevData) => ({\n            ...prevData,\n            response: \"\"\n        }));\n    };\n\n};\n\n\n    return (\n        <div>\n            <section className=\"section-container\"> \n                <form className=\"form-container\" onSubmit={handleSubmit}>\n                <div className=\"form-item\">\n                    <label htmlFor=\"Response\">How was it?</label>\n                    <input \n                        id=\"response\" \n                        type=\"text\" \n                        name=\"response\"\n                        value={confirmLogout.response} \n                        onChange={handleChange} />\n                        </div>\n                    <button type=\"submit\">Logout</button>\n                </form>\n            </section>\n        </div>\n    );\n};\n\nexport default Logout;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}