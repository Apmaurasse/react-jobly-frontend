{"ast":null,"code":"var _jsxFileName = \"/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/JobCard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobCard = ({\n  jobs\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const job = jobs.find(job => job.id === id);\n  if (!job) {\n    // Redirect to /jobs if job not found\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/jobs\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Title: \", job.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Salary: \", job.salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Equity: \", job.equity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(JobCard, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = JobCard;\nexport default JobCard;\nvar _c;\n$RefreshReg$(_c, \"JobCard\");","map":{"version":3,"names":["React","useParams","Navigate","jsxDEV","_jsxDEV","JobCard","jobs","_s","id","job","find","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","salary","equity","_c","$RefreshReg$"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/JobCard.jsx"],"sourcesContent":["import React from 'react';\nimport { useParams, Navigate } from 'react-router-dom';\n\nconst JobCard = ({ jobs }) => {\n    const { id } = useParams();\n\n    const job = jobs.find(job => job.id === id);\n\n    if (!job) {\n        // Redirect to /jobs if job not found\n        return <Navigate to=\"/jobs\" replace />;\n    }\n\n    return (\n\n    <section className=\"section-container\">\n        <div className=\"company-container\">\n            <p>Title: {job.title}</p>\n            <p>Salary: {job.salary}</p>\n            <p>Equity: {job.equity}</p>\n        </div>\n    </section>\n    );\n};\n\nexport default JobCard;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAG,CAAC,GAAGP,SAAS,CAAC,CAAC;EAE1B,MAAMQ,GAAG,GAAGH,IAAI,CAACI,IAAI,CAACD,GAAG,IAAIA,GAAG,CAACD,EAAE,KAAKA,EAAE,CAAC;EAE3C,IAAI,CAACC,GAAG,EAAE;IACN;IACA,oBAAOL,OAAA,CAACF,QAAQ;MAACS,EAAE,EAAC,OAAO;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC1C;EAEA,oBAEAZ,OAAA;IAASa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAClCd,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9Bd,OAAA;QAAAc,QAAA,GAAG,SAAO,EAACT,GAAG,CAACU,KAAK;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBZ,OAAA;QAAAc,QAAA,GAAG,UAAQ,EAACT,GAAG,CAACW,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BZ,OAAA;QAAAc,QAAA,GAAG,UAAQ,EAACT,GAAG,CAACY,MAAM;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACT,EAAA,CApBIF,OAAO;EAAA,QACMJ,SAAS;AAAA;AAAAqB,EAAA,GADtBjB,OAAO;AAsBb,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}