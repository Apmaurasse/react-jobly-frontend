{"ast":null,"code":"var _jsxFileName = \"/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/JoblyFrontendApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport JoblyRoutes from \"./JoblyRoutes\";\nimport JoblyApi from \"./Api\";\nimport { JoblyProvider } from \"./JoblyContext\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JoblyFrontendApp = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [companies, setCompanies] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const companiesData = await JoblyApi.getCompanies();\n        setCompanies(companiesData);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n    fetchData();\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading \\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(JoblyProvider, {\n      children: /*#__PURE__*/_jsxDEV(JoblyRoutes, {\n        companies: companies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(JoblyFrontendApp, \"jBLLA96FACLex4hnuC2H7OsMAYY=\");\n_c = JoblyFrontendApp;\nexport default JoblyFrontendApp;\nvar _c;\n$RefreshReg$(_c, \"JoblyFrontendApp\");","map":{"version":3,"names":["React","useState","useEffect","JoblyRoutes","JoblyApi","JoblyProvider","jsxDEV","_jsxDEV","Fragment","_Fragment","JoblyFrontendApp","_s","isLoading","setIsLoading","companies","setCompanies","fetchData","companiesData","getCompanies","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/JoblyFrontendApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport JoblyRoutes from \"./JoblyRoutes\";\nimport JoblyApi from \"./Api\";\nimport { JoblyProvider } from \"./JoblyContext\";\n\nconst JoblyFrontendApp = () => {\n\n    const[isLoading, setIsLoading] = useState(true);\n    const[companies, setCompanies] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n          try {\n            const companiesData = await JoblyApi.getCompanies();\n            setCompanies(companiesData);\n            setIsLoading(false);\n          } catch (error) {\n            console.error(\"Error fetching data:\", error);\n          }\n        }\n        fetchData();\n      }, []);\n    \n      if (isLoading) {\n        return <p>Loading &hellip;</p>;\n      }\n\n\n    return(\n        <>\n            <JoblyProvider>\n                    <JoblyRoutes companies={companies}/>\n            </JoblyProvider>\n        </>\n    )\n\n}\n\n\nexport default JoblyFrontendApp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,QAAQ,MAAM,OAAO;AAC5B,SAASC,aAAa,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE3B,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC/C,MAAK,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACZ,eAAec,SAASA,CAAA,EAAG;MACzB,IAAI;QACF,MAAMC,aAAa,GAAG,MAAMb,QAAQ,CAACc,YAAY,CAAC,CAAC;QACnDH,YAAY,CAACE,aAAa,CAAC;QAC3BJ,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF;IACAH,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIJ,SAAS,EAAE;IACb,oBAAOL,OAAA;MAAAc,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAChC;EAGF,oBACIlB,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACId,OAAA,CAACF,aAAa;MAAAgB,QAAA,eACNd,OAAA,CAACJ,WAAW;QAACW,SAAS,EAAEA;MAAU;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC,gBAClB,CAAC;AAGX,CAAC;AAAAd,EAAA,CA/BKD,gBAAgB;AAAAgB,EAAA,GAAhBhB,gBAAgB;AAkCtB,eAAeA,gBAAgB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}