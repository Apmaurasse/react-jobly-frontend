{"ast":null,"code":"import{useEffect}from'react';import{useNavigate}from'react-router-dom';const useConfirmLoggedIn=()=>{const navigate=useNavigate();useEffect(()=>{try{const currentUser=localStorage.getItem('currentUser');if(!currentUser){// Navigate to the home page if currentUser is not found\nnavigate('/');}}catch(error){console.error('Error retrieving currentUser:',error);// Handle error accordingly, maybe log it or display a message to the user\n}},[]);};export default useConfirmLoggedIn;","map":{"version":3,"names":["useEffect","useNavigate","useConfirmLoggedIn","navigate","currentUser","localStorage","getItem","error","console"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Helpers/useConfirmLoggedIn.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst useConfirmLoggedIn = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    try {\n      const currentUser = localStorage.getItem('currentUser');\n      if (!currentUser) {\n        // Navigate to the home page if currentUser is not found\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error retrieving currentUser:', error);\n      // Handle error accordingly, maybe log it or display a message to the user\n    }\n  }, []);\n\n};\n\nexport default useConfirmLoggedIn;\n\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAAAC,QAAQ,CAAGF,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,GAAI,CACF,KAAM,CAAAI,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACvD,GAAI,CAACF,WAAW,CAAE,CAChB;AACAD,QAAQ,CAAC,GAAG,CAAC,CACf,CACF,CAAE,MAAOI,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrD;AACF,CACF,CAAC,CAAE,EAAE,CAAC,CAER,CAAC,CAED,cAAe,CAAAL,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}