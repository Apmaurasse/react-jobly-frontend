{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import useConfirmLoggedIn from\"../Helpers/useConfirmLoggedIn\";import\"./JoblyAppStyles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JobList=_ref=>{let{jobs}=_ref;useConfirmLoggedIn();// State to track which jobs have been applied to\nconst[appliedJobs,setAppliedJobs]=useState(()=>{const savedJobs=localStorage.getItem(\"appliedJobs\");return savedJobs?JSON.parse(savedJobs):{};});// Save appliedJobs to localStorage whenever it changes\nuseEffect(()=>{localStorage.setItem(\"appliedJobs\",JSON.stringify(appliedJobs));},[appliedJobs]);// Function to handle applying to a job\nconst handleApply=jobId=>{setAppliedJobs(prevState=>({...prevState,[jobId]:true}));};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"section\",{className:\"section-container\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"title-container\",children:\"Jobs\"}),jobs.map(job=>/*#__PURE__*/_jsxs(\"div\",{className:\"item-container\",children:[/*#__PURE__*/_jsx(Link,{to:\"/jobs/\".concat(job.id),children:/*#__PURE__*/_jsx(\"h2\",{children:job.title})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Salary: \",job.salary]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Equity: \",job.equity]}),/*#__PURE__*/_jsx(Link,{to:\"/companies/\".concat(job.company_handle),children:/*#__PURE__*/_jsx(\"p\",{children:\"Company Info\"})}),appliedJobs[job.id]?/*#__PURE__*/_jsx(\"button\",{className:\"dark-red-button\",children:\"Applied\"}):/*#__PURE__*/_jsx(\"button\",{className:\"red-button\",onClick:()=>handleApply(job.id),children:\"Apply\"})]},job.id))]})});};export default JobList;","map":{"version":3,"names":["React","useState","useEffect","Link","useConfirmLoggedIn","jsx","_jsx","jsxs","_jsxs","JobList","_ref","jobs","appliedJobs","setAppliedJobs","savedJobs","localStorage","getItem","JSON","parse","setItem","stringify","handleApply","jobId","prevState","children","className","map","job","to","concat","id","title","salary","equity","company_handle","onClick"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/JobList.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useConfirmLoggedIn from \"../Helpers/useConfirmLoggedIn\";\nimport \"./JoblyAppStyles.css\";\n\nconst JobList = ({ jobs }) => {\n  useConfirmLoggedIn();\n\n  // State to track which jobs have been applied to\n  const [appliedJobs, setAppliedJobs] = useState(() => {\n    const savedJobs = localStorage.getItem(\"appliedJobs\");\n    return savedJobs ? JSON.parse(savedJobs) : {};\n  });\n\n  // Save appliedJobs to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem(\"appliedJobs\", JSON.stringify(appliedJobs));\n  }, [appliedJobs]);\n\n  // Function to handle applying to a job\n  const handleApply = jobId => {\n    setAppliedJobs(prevState => ({\n      ...prevState,\n      [jobId]: true\n    }));\n  };\n\n  return (\n    <div>\n      <section className=\"section-container\">\n        <h1 className=\"title-container\">Jobs</h1>\n        {jobs.map(job => (\n          <div className=\"item-container\" key={job.id}>\n            <Link to={`/jobs/${job.id}`}>\n              <h2>{job.title}</h2>\n            </Link>\n            <p>Salary: {job.salary}</p>\n            <p>Equity: {job.equity}</p>\n            <Link to={`/companies/${job.company_handle}`}><p>Company Info</p>\n            </Link>\n            {/* Render Apply button if job has not been applied to, otherwise render Applied button */}\n            {appliedJobs[job.id] ? (\n              <button className=\"dark-red-button\">Applied</button>\n            ) : (\n              <button className=\"red-button\" onClick={() => handleApply(job.id)}>\n                Apply\n              </button>\n            )}\n          </div>\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default JobList;\n\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,kBAAkB,KAAM,+BAA+B,CAC9D,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE9B,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CACvBN,kBAAkB,CAAC,CAAC,CAEpB;AACA,KAAM,CAACQ,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,IAAM,CACnD,KAAM,CAAAa,SAAS,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACrD,MAAO,CAAAF,SAAS,CAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,CAAG,CAAC,CAAC,CAC/C,CAAC,CAAC,CAEF;AACAZ,SAAS,CAAC,IAAM,CACda,YAAY,CAACI,OAAO,CAAC,aAAa,CAAEF,IAAI,CAACG,SAAS,CAACR,WAAW,CAAC,CAAC,CAClE,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB;AACA,KAAM,CAAAS,WAAW,CAAGC,KAAK,EAAI,CAC3BT,cAAc,CAACU,SAAS,GAAK,CAC3B,GAAGA,SAAS,CACZ,CAACD,KAAK,EAAG,IACX,CAAC,CAAC,CAAC,CACL,CAAC,CAED,mBACEhB,IAAA,QAAAkB,QAAA,cACEhB,KAAA,YAASiB,SAAS,CAAC,mBAAmB,CAAAD,QAAA,eACpClB,IAAA,OAAImB,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAAC,MAAI,CAAI,CAAC,CACxCb,IAAI,CAACe,GAAG,CAACC,GAAG,eACXnB,KAAA,QAAKiB,SAAS,CAAC,gBAAgB,CAAAD,QAAA,eAC7BlB,IAAA,CAACH,IAAI,EAACyB,EAAE,UAAAC,MAAA,CAAWF,GAAG,CAACG,EAAE,CAAG,CAAAN,QAAA,cAC1BlB,IAAA,OAAAkB,QAAA,CAAKG,GAAG,CAACI,KAAK,CAAK,CAAC,CAChB,CAAC,cACPvB,KAAA,MAAAgB,QAAA,EAAG,UAAQ,CAACG,GAAG,CAACK,MAAM,EAAI,CAAC,cAC3BxB,KAAA,MAAAgB,QAAA,EAAG,UAAQ,CAACG,GAAG,CAACM,MAAM,EAAI,CAAC,cAC3B3B,IAAA,CAACH,IAAI,EAACyB,EAAE,eAAAC,MAAA,CAAgBF,GAAG,CAACO,cAAc,CAAG,CAAAV,QAAA,cAAClB,IAAA,MAAAkB,QAAA,CAAG,cAAY,CAAG,CAAC,CAC3D,CAAC,CAENZ,WAAW,CAACe,GAAG,CAACG,EAAE,CAAC,cAClBxB,IAAA,WAAQmB,SAAS,CAAC,iBAAiB,CAAAD,QAAA,CAAC,SAAO,CAAQ,CAAC,cAEpDlB,IAAA,WAAQmB,SAAS,CAAC,YAAY,CAACU,OAAO,CAAEA,CAAA,GAAMd,WAAW,CAACM,GAAG,CAACG,EAAE,CAAE,CAAAN,QAAA,CAAC,OAEnE,CAAQ,CACT,GAfkCG,GAAG,CAACG,EAgBpC,CACN,CAAC,EACK,CAAC,CACP,CAAC,CAEV,CAAC,CAED,cAAe,CAAArB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}