{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nconst useConfirmLoggedIn = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    try {\n      const currentUser = localStorage.getItem('currentUser');\n      if (!currentUser) {\n        // Navigate to the home page if currentUser is not found\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error retrieving currentUser:', error);\n      // Handle error accordingly, maybe log it or display a message to the user\n    }\n  }, []);\n};\n_s(useConfirmLoggedIn, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\nexport default useConfirmLoggedIn;","map":{"version":3,"names":["useEffect","useNavigate","useConfirmLoggedIn","_s","navigate","currentUser","localStorage","getItem","error","console"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Helpers/useConfirmLoggedIn.jsx"],"sourcesContent":["import { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst useConfirmLoggedIn = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    try {\n      const currentUser = localStorage.getItem('currentUser');\n      if (!currentUser) {\n        // Navigate to the home page if currentUser is not found\n        navigate('/');\n      }\n    } catch (error) {\n      console.error('Error retrieving currentUser:', error);\n      // Handle error accordingly, maybe log it or display a message to the user\n    }\n  }, []);\n\n};\n\nexport default useConfirmLoggedIn;\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMK,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;MACvD,IAAI,CAACF,WAAW,EAAE;QAChB;QACAD,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;AAER,CAAC;AAACL,EAAA,CAhBID,kBAAkB;EAAA,QACLD,WAAW;AAAA;AAiB9B,eAAeC,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}