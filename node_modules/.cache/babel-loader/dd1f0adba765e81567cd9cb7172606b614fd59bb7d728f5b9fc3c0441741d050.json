{"ast":null,"code":"var _jsxFileName = \"/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/Logout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logout = ({\n  loginKey\n}) => {\n  _s();\n  const initialState = {\n    response: \"\",\n    error: \"\"\n  };\n  const [confirmLogout, setConfirmLogout] = useState(initialState);\n  const [formSubmitted, setFormSubmitted] = useState(false); // New state\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setConfirmLogout(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      localStorage.removeItem('currentUser');\n      navigate('/logoutconfirmation'); // Redirect after successful logout\n      loginKey(); // Update the key in the parent component\n      setFormSubmitted(true); // Set formSubmitted to true after successful submission\n    } catch (error) {\n      setConfirmLogout(prevData => ({\n        ...prevData,\n        error: \"Error logging out\"\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"Response\",\n            children: \"How was it?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"response\",\n            type: \"text\",\n            name: \"response\",\n            value: confirmLogout.response,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), formSubmitted && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Form submitted successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Logout, \"rqbyMoWsO2bZsuFMGRPBp/q0dL0=\", false, function () {\n  return [useNavigate];\n});\n_c = Logout;\nexport default Logout;\nvar _c;\n$RefreshReg$(_c, \"Logout\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Logout","loginKey","_s","initialState","response","error","confirmLogout","setConfirmLogout","formSubmitted","setFormSubmitted","navigate","handleChange","e","name","value","target","prevData","handleSubmit","event","preventDefault","localStorage","removeItem","children","className","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","type","onChange","_c","$RefreshReg$"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/Logout.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Logout = ({ loginKey }) => {\n    const initialState = {\n        response: \"\",\n        error: \"\"\n    };\n\n    const [confirmLogout, setConfirmLogout] = useState(initialState);\n    const [formSubmitted, setFormSubmitted] = useState(false); // New state\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setConfirmLogout((prevData) => ({\n            ...prevData,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        try {        \n            localStorage.removeItem('currentUser');\n            navigate('/logoutconfirmation'); // Redirect after successful logout\n            loginKey(); // Update the key in the parent component\n            setFormSubmitted(true); // Set formSubmitted to true after successful submission\n        } catch (error) {\n            setConfirmLogout((prevData) => ({\n                ...prevData,\n                error: \"Error logging out\"\n            }));\n        }\n    };\n\n    return (\n        <div>\n            <section className=\"section-container\"> \n                <form className=\"form-container\" onSubmit={handleSubmit}>\n                    <div className=\"form-item\">\n                        <label htmlFor=\"Response\">How was it?</label>\n                        <input \n                            id=\"response\" \n                            type=\"text\" \n                            name=\"response\"\n                            value={confirmLogout.response} \n                            onChange={handleChange} />\n                    </div>\n                    <button type=\"submit\">Logout</button>\n                </form>\n                {formSubmitted && (\n                    <p>Form submitted successfully!</p>\n                )}\n            </section>\n        </div>\n    );\n};\n\nexport default Logout;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAMC,YAAY,GAAG;IACjBC,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACX,CAAC;EAED,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAACO,YAAY,CAAC;EAChE,MAAM,CAACK,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9B,MAAMc,YAAY,GAAIC,CAAC,IAAK;IACxB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCR,gBAAgB,CAAES,QAAQ,KAAM;MAC5B,GAAGA,QAAQ;MACX,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACAC,YAAY,CAACC,UAAU,CAAC,aAAa,CAAC;MACtCX,QAAQ,CAAC,qBAAqB,CAAC,CAAC,CAAC;MACjCT,QAAQ,CAAC,CAAC,CAAC,CAAC;MACZQ,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACZE,gBAAgB,CAAES,QAAQ,KAAM;QAC5B,GAAGA,QAAQ;QACXX,KAAK,EAAE;MACX,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;EAED,oBACIN,OAAA;IAAAuB,QAAA,eACIvB,OAAA;MAASwB,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBAClCvB,OAAA;QAAMwB,SAAS,EAAC,gBAAgB;QAACC,QAAQ,EAAEP,YAAa;QAAAK,QAAA,gBACpDvB,OAAA;UAAKwB,SAAS,EAAC,WAAW;UAAAD,QAAA,gBACtBvB,OAAA;YAAO0B,OAAO,EAAC,UAAU;YAAAH,QAAA,EAAC;UAAW;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC7C9B,OAAA;YACI+B,EAAE,EAAC,UAAU;YACbC,IAAI,EAAC,MAAM;YACXlB,IAAI,EAAC,UAAU;YACfC,KAAK,EAAER,aAAa,CAACF,QAAS;YAC9B4B,QAAQ,EAAErB;UAAa;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACN9B,OAAA;UAAQgC,IAAI,EAAC,QAAQ;UAAAT,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,EACNrB,aAAa,iBACVT,OAAA;QAAAuB,QAAA,EAAG;MAA4B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACrC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAC3B,EAAA,CAtDIF,MAAM;EAAA,QAQSH,WAAW;AAAA;AAAAoC,EAAA,GAR1BjC,MAAM;AAwDZ,eAAeA,MAAM;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}