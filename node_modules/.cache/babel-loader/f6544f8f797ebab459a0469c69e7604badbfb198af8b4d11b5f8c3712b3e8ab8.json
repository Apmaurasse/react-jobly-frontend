{"ast":null,"code":"var _jsxFileName = \"/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/CompanyList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./JoblyAppStyles.css\";\nimport useConfirmLoggedIn from \"../Helpers/useConfirmLoggedIn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyList = ({\n  companies\n}) => {\n  _s();\n  useConfirmLoggedIn();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const filteredCompanies = companies.filter(company => {\n    const {\n      name,\n      num_employees: numEmployees,\n      description\n    } = company;\n    // Check if numEmployees is not null before converting it to a string\n    return name.toLowerCase().includes(searchTerm.toLowerCase()) || numEmployees !== null && numEmployees.toString().includes(searchTerm) || description.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"section-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title-container\",\n        children: \"Companies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), filteredCompanies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/companies/${company.handle}`,\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), company.num_employees !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Employees: \", company.num_employees]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: company.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, company.handle, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CompanyList, \"9BjvYtDwOP6RFUJ8TNJvuDa5L94=\", false, function () {\n  return [useConfirmLoggedIn];\n});\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useState","Link","useConfirmLoggedIn","jsxDEV","_jsxDEV","CompanyList","companies","_s","searchTerm","setSearchTerm","filteredCompanies","filter","company","name","num_employees","numEmployees","description","toLowerCase","includes","toString","handleChange","event","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","to","handle","_c","$RefreshReg$"],"sources":["/Users/adammaurasse/Springboard/React/React_Jobly/react-jobly/frontend/src/Templates/CompanyList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./JoblyAppStyles.css\"\nimport useConfirmLoggedIn from \"../Helpers/useConfirmLoggedIn\";\n\n\nconst CompanyList = ({ companies }) => {\n  useConfirmLoggedIn();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const filteredCompanies = companies.filter(company => {\n    const { name, num_employees: numEmployees, description } = company;\n    // Check if numEmployees is not null before converting it to a string\n    return (\n      name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      (numEmployees !== null && numEmployees.toString().includes(searchTerm)) ||\n      description.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  });\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <div>\n\n      <section className=\"section-container\">\n      <h1 className=\"title-container\">Companies</h1>\n      {/* <input\n        type=\"text\"\n        placeholder=\"Search companies...\"\n        value={searchTerm}\n        onChange={handleChange}\n      /> */}\n        {filteredCompanies.map(company => (\n          <div className=\"item-container\" key={company.handle}>\n            <Link to={`/companies/${company.handle}`}>\n              <h2>{company.name}</h2>\n            </Link>\n            {/* Check if numEmployees is not null before displaying it */}\n            {company.num_employees !== null && <p>Employees: {company.num_employees}</p>}\n            <p>{company.description}</p>\n          </div>\n        ))}\n      </section>\n    </div>\n  );\n};\n\nexport default CompanyList;\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,sBAAsB;AAC7B,OAAOC,kBAAkB,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/D,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrCL,kBAAkB,CAAC,CAAC;EAEpB,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,iBAAiB,GAAGJ,SAAS,CAACK,MAAM,CAACC,OAAO,IAAI;IACpD,MAAM;MAAEC,IAAI;MAAEC,aAAa,EAAEC,YAAY;MAAEC;IAAY,CAAC,GAAGJ,OAAO;IAClE;IACA,OACEC,IAAI,CAACI,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,UAAU,CAACS,WAAW,CAAC,CAAC,CAAC,IACpDF,YAAY,KAAK,IAAI,IAAIA,YAAY,CAACI,QAAQ,CAAC,CAAC,CAACD,QAAQ,CAACV,UAAU,CAAE,IACvEQ,WAAW,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACV,UAAU,CAACS,WAAW,CAAC,CAAC,CAAC;EAEhE,CAAC,CAAC;EAEF,MAAMG,YAAY,GAAGC,KAAK,IAAI;IAC5BZ,aAAa,CAACY,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,eAEEpB,OAAA;MAASqB,SAAS,EAAC,mBAAmB;MAAAD,QAAA,gBACtCpB,OAAA;QAAIqB,SAAS,EAAC,iBAAiB;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAO3CnB,iBAAiB,CAACoB,GAAG,CAAClB,OAAO,iBAC5BR,OAAA;QAAKqB,SAAS,EAAC,gBAAgB;QAAAD,QAAA,gBAC7BpB,OAAA,CAACH,IAAI;UAAC8B,EAAE,EAAG,cAAanB,OAAO,CAACoB,MAAO,EAAE;UAAAR,QAAA,eACvCpB,OAAA;YAAAoB,QAAA,EAAKZ,OAAO,CAACC;UAAI;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,EAENjB,OAAO,CAACE,aAAa,KAAK,IAAI,iBAAIV,OAAA;UAAAoB,QAAA,GAAG,aAAW,EAACZ,OAAO,CAACE,aAAa;QAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5EzB,OAAA;UAAAoB,QAAA,EAAIZ,OAAO,CAACI;QAAW;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GANOjB,OAAO,CAACoB,MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAO9C,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACtB,EAAA,CA3CIF,WAAW;EAAA,QACfH,kBAAkB;AAAA;AAAA+B,EAAA,GADd5B,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}